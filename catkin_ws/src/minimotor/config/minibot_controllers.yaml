# ros_control_boilerplate Settings -----------------------
# Settings for ros_control control loop
generic_hw_control_loop:
  loop_hz: 25
  cycle_time_error_threshold: 0.01

# Settings for ros_control hardware interface
hardware_interface:
   joints:
      - intake
      - leftMotor
      - rightMotor
   sim_control_mode: 0 # 0: position, 1: velocity
   port: /dev/ttyS1

# Publish all joint states ----------------------------------
# Creates the /joint_states topic necessary in ROS
joint_state_controller:
   type:         joint_state_controller/JointStateController
   publish_rate: 50

intake:
   type: motor
   port: 1
   inverted: true
   velocity_mult: 0.0109 # maps velocity to percent output (-1.0 to 1.0)
   velocity_y_intercept: 0.595

leftMotor:
   type: motor
   port: 3
   inverted: false
   velocity_mult: 0.0109 # maps velocity to percent output (-1.0 to 1.0)
   velocity_y_intercept: 0.595

rightMotor:
   type: motor
   port: 4
   inverted: true
   velocity_mult: 0.0109 # maps velocity (rad/sec) to percent output (-1.0 to 1.0). this is 1/(320 rpm converted to rad/sec)
   velocity_y_intercept: 0.595

# Individual Position Controllers ---------------------------------------
# Allows to send individual ROS msg of Float64 to each joint separately
intake_controller:
   type: velocity_controllers/JointVelocityController
   joint: intake
   pid: {p: 1, i: 1, d: 1}

# Group Position Controllers ---------------------------------------
# Allows to send single ROS msg of Float64MultiArray to all joints
joint_position_controller:
   type: position_controllers/JointGroupPositionController
   joints:
     - intake
     - leftMotor
     - rightMotor

diffbot_controller:
   type: "diff_drive_controller/DiffDriveController"
   left_wheel: 'leftMotor'
   right_wheel: 'rightMotor'
   wheel_separation: 0.043
   wheel_radius: 0.0325
   publish_rate: 25.0 # defaults to 50
   pose_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]
   twist_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]
   cmd_vel_timeout: 20.0 # we test this separately, give plenty for the other tests
   linear:
      x:
         has_velocity_limits: true
         max_velocity: 1.23
         min_velocity: -1.23
   angular:
      z:
         has_velocity_limits: true
         max_velocity: 55.0
         min_velocity: -55.0